<section xml:id="act_newtons_method">
  <title>Newton's Method</title>
  <subsection>
    <title>Recommended Tutorials</title>
    <p>
      Before starting on these exercises, you should familiarize yourself with the material covered in the following tutorials:
      <ul>
        <li><xref ref="chp_derivative" text="title" /></li>
        <li><xref ref="chp_conditional_statements_and_loops" text="title" /></li>
      </ul>
    </p>
  </subsection>
  <subsection>
    <title>Introduction</title>
    <p>
      Newton's method is a numerical technique that can be used to approximate the roots of a continuous function. Suppose <m>f(x)</m> 
      is a differentiable function and you know that <m>f(x)=0</m> at some root <m>x=r</m>. However, you are unable to solve for <m>r</m> 
      algebraically and so you need to approximate <m>r</m> numerically.
    </p>
    <p>
      Newton's method relies on using linear approximation of the function at a point close to the desired root <m>r</m>. You can begin by 
      choosing a value <m>x_0</m> relatively close to <m>r</m>, and constructing the linear approximation of <m>f(x)</m> at <m>x_0</m>:
      <me>L(x) = f'(x_0) (x-x_0) + f(x_0)</me>.
      <idx><h>Newton's method</h></idx>
      Because <m>f(x) \approx L(x)</m> near <m>x_0</m>, the <m>x</m>-intercept of <m>L(x)</m> should be very close to <m>r</m>. We can solve for 
      this <m>x</m>-intercept by setting <m>L(x)</m> by setting it to zero:
      <md>
        <mrow> f'(x_0) (x-x_0) + f(x_0) \amp = 0 </mrow>
        <mrow> x \amp = x_0 - \frac{f(x_0)}{f'(x_0)} </mrow>
      </md>
    </p>
    <p>
      Assuming that this <m>x</m>-intercept is even closer to <m>r</m> than our initial value <m>x_0</m>, we could this new value <m>x_1</m> and 
      repeat these same steps: find the new linear approximation of <m>f(x)</m> at <m>x_1</m>, solve for its <m>x</m>-intercept, and call the value 
      <m>x_2</m>.
      <md>
        <mrow> x_1 \amp = x_0 - \frac{f(x_0)}{f'(x_0)} </mrow>
        <mrow> x_2 \amp = x_1 - \frac{f(x_1)}{f'(x_1)} </mrow>
      </md>
    </p>
    <p>
      In this way, we only need one simple formula for Newton's method, that can be applied in repetition until we get our desired accuracy:
      <md>
        <mrow xml:id="eq_newtonsmethod" number="yes"> x_{new} \amp = x_{old} - \dfrac{f(x_{old})}{f^{\prime}(x_{old})} </mrow>
      </md>
      <idx><h>Newton's method</h><h>formula</h></idx>
      Be warned though - there is always the possibility of finding a point on <m>f(x)</m> where <xref ref="eq_newtonsmethod">equation</xref> is undefined!
    </p>
    <aside>
      <p>
        Newton's method will fail for a number of different reasons:
        <ol>
          <li>the starting point leads to a cycle between two or more points</li>
          <li>the iteration point is at a critical point, or</li>
          <li>the derivative is discontinuous.</li>
        </ol>
        Be careful of such situations.
      </p>
    </aside>
    <p>
      A visual example is shown in <xref ref="fig_newtonsmethod"/>.
    </p>
    <figure xml:id="fig_newtonsmethod">
      <caption>Using three iterations of Newton's Method to approximate the root <m>r</m>.</caption>
      <image>
        <latex-image>
          \begin{tikzpicture}
            \begin{axis}[
              width=\linewidth,
              height=0.4\linewidth,
              axis lines=middle,
              xlabel={\(x\)},
              ylabel={\(y\)},
              xlabel style={below right},
              ylabel style={above left},
              xmin=-10, xmax=80, xtick={0},
              ymin=-20, ymax=120, ytick={0}
            ]
              \addplot [domain=-10:100, samples=100, thick] {1.05^(x+30)-10};
              \addplot [domain=51.06267696:70, samples=100] {6.415967957*x-327.6164992};
              \addplot [domain=34.49325000:51.06267696, samples=100] {2.546792633*x-87.84715498};
              \addplot [domain=22.80985278:34.49325000, samples=100] {1.134746996*x-25.88341192};
              \addplot[mark=*] coordinates {(17.19363282,0)} node [below] {\(r\)};
              \addplot[mark=*] coordinates {(70,0)} node [below] {\(x_0\)};
              \addplot +[mark=none] coordinates {(70,0) (70, 121.5012578)};
              \addplot[mark=*] coordinates {(51.06267696,0)} node [below] {\(x_1\)};
              \addplot +[mark=none] coordinates {(51.062676960,0) (51.06267696, 42.19889452)};
              \addplot[mark=*] coordinates {(34.49325000,0)} node [below] {\(x_2\)};
              \addplot +[mark=none] coordinates {(34.49325000,0) (34.49325000, 13.25769989)};
              \addplot[mark=*] coordinates {(22.80985278,0)} node [below] {\(x_3\)};
              \addplot +[mark=none] coordinates {(22.80985278,0) (22.80985278, 3.15236232)};
              \draw(axis cs:55,75) node {\(f(x)\)};
            \end{axis}
          \end{tikzpicture}
        </latex-image>
      </image>
    </figure>
    <p>
      In this activity, you will be using the <c>NewtonsMethod()</c> command, which automates this process. It is part of the <c>Student[Calculus1]</c> 
      package, which you will need to include at the top of your Maple worksheet. In the last exercise, you are encouraged to try to write a loop 
      for Newton's Method.
    </p>
  </subsection>
  <exercises>
    <exercise>
      <introduction>
        <p>
          In this exercise, you will use Newton's Method to numerically approximate the roots of the function <m>f(x) = x^2 - 2</m>. It is 
          simple enough to solve for the two roots algebraically, but this example should help give you a basic understanding of how the 
          method works.
        </p>
      </introduction>
      <task>
          <statement>
          <p>
            Use Maple's <c>NewtonsMethod()</c> command to determine the value of the root of the function <m>f(x) = x^2 - 2</m> using an initial 
            value of <m>2</m>. Determine how many iterations are required until you get <m>10</m> decimal places of accuracy.
            <idx><h>Newton's method</h><h>NewtonsMethod</h></idx>
          </p>
        </statement>
        <hint>
          <p>
            Adding the optional <c>iterations</c> parameter to the <c>NewtonsMethod()</c> command allows you to choose how many iterations are performed.
            By default, <c>NewtonsMethod()</c> carries out <m>5</m> iterations. You can set the parameter <c>output=sequence</c> to show the value 
            after each iteration.
          </p>
          <p>
            See <xref ref="sec_newtons_method"/> for an example.
          </p>
        </hint>
      </task>
      <task>
        <statement>
          <p>
            Apply Newton's method to determine the value of the root of the function <m>f(x) = x^2 - 2</m>. This time, use an initial value of <m>-2</m>.
            Determine how many iterations are required until you get <m>10</m> decimal places of accuracy.
          </p>
        </statement>
      </task>
      <task>
        <statement>
          <p>
            Try to apply Newton's method to determine the value of the root of the function <m>f(x) = x^2 - 2</m> using an initial value of <m>0</m>.
            Determine why the <c>NewtonsMethod()</c> command gives an error for this particular value.
          </p>
        </statement>
        <hint>
          <p>
            You may wish to graph <m>f(x)</m> to see the behaviour of the function around <m>x=0</m>.
          </p>
        </hint>
      </task>
    </exercise>
    <exercise>
      <introduction>
        <p>
          In the last exercise, you used Newton's Method to numerically approxiamte the values of the two roots, <m>\pm\sqrt{2}</m>. In this example, you 
          will use Newton's method to numerically approximate <m>\sqrt{7}</m>
        </p>
      </introduction>
      <task>
        <statement>
          <p>
            Assign a function <m>g(x)</m> that has a known root of <m>\sqrt{7}</m>
          </p>
        </statement>
      </task>
      <task>
        <statement>
          <p>
            Apply Newton's method to the function from part (a) with an initial value for <m>x</m> that is close to <m>\sqrt{7}</m>. Then, evaluate 
            <m>\sqrt{7}</m> to <m>15</m> digits using <c>evalf()</c> and verify that the values agree.
          </p>
        </statement>
      </task>
    </exercise>
    <exercise>
      <statement>
        <p>
          Newton's method converges with <q>quadratic convergence</q>, which roughly means that you will get twice as many correct digits for 
          <m>x_{new}</m> as you did for <m>x_{old}</m>. Iterate Newton's method for
          <me>g(x) = x^2 - \sin(x) - 0.5</me>
          with an initial guess of <m>x = 2</m>. Find the value of the zero of <m>g(x)</m> to <m>16</m> decimal places.
        </p>
      </statement>
    </exercise>
    <exercise>
      <statement>
        <p>
          (Optional) Write a "while" loop that allows you to solve exercises 1 and 2.
          <idx><h>loops</h></idx>
        </p>
      </statement>
      <hint>
        <p>
          Examples of loops can be found in <xref ref="chp_conditional_statements_and_loops"/>.
        </p>
      </hint>
    </exercise>
  </exercises>
</section>